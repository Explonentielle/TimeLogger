"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-safe-action";
exports.ids = ["vendor-chunks/next-safe-action"];
exports.modules = {

/***/ "(action-browser)/./node_modules/next-safe-action/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/next-safe-action/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_SERVER_ERROR: () => (/* binding */ DEFAULT_SERVER_ERROR),\n/* harmony export */   createSafeActionClient: () => (/* binding */ createSafeActionClient)\n/* harmony export */ });\n/* harmony import */ var _decs_typeschema__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @decs/typeschema */ \"(action-browser)/./node_modules/next-safe-action/node_modules/@decs/typeschema/dist/index.mjs\");\n/* harmony import */ var next_dist_client_components_not_found_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/client/components/not-found.js */ \"(action-browser)/./node_modules/next/dist/client/components/not-found.js\");\n/* harmony import */ var next_dist_client_components_redirect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/client/components/redirect.js */ \"(action-browser)/./node_modules/next/dist/client/components/redirect.js\");\n// src/index.ts\n\n\n\n\n// src/utils.ts\nvar isError = (error) => error instanceof Error;\nvar buildValidationErrors = (issues) => {\n  const validationErrors = {};\n  const appendIssue = (path, message) => {\n    if (validationErrors[path]?.length) {\n      validationErrors[path].push(message);\n    } else {\n      validationErrors[path] = [message];\n    }\n  };\n  for (const issue of issues) {\n    const paths = issue.path;\n    if (paths?.length) {\n      for (const path of paths) {\n        appendIssue(path, issue.message);\n      }\n    } else {\n      appendIssue(\"_root\", issue.message);\n    }\n  }\n  return validationErrors;\n};\n\n// src/index.ts\nvar DEFAULT_SERVER_ERROR = \"Something went wrong while executing the operation\";\nvar createSafeActionClient = (createOpts) => {\n  const handleServerErrorLog = createOpts?.handleServerErrorLog || ((e) => {\n    console.error(\"Action error:\", e.message);\n  });\n  const handleReturnedServerError = (e) => createOpts?.handleReturnedServerError?.(e) || DEFAULT_SERVER_ERROR;\n  const actionBuilder = (schema, serverCode, utils) => {\n    return async (clientInput) => {\n      try {\n        const parsedInput = await (0,_decs_typeschema__WEBPACK_IMPORTED_MODULE_2__.wrap)(schema).validate(clientInput);\n        if (\"issues\" in parsedInput) {\n          return {\n            validationErrors: buildValidationErrors(parsedInput.issues)\n          };\n        }\n        const ctx = await Promise.resolve(\n          createOpts?.middleware?.(parsedInput.data, utils?.middlewareData)\n        );\n        const data = await serverCode(parsedInput.data, ctx) ?? null;\n        return { data };\n      } catch (e) {\n        if ((0,next_dist_client_components_redirect_js__WEBPACK_IMPORTED_MODULE_1__.isRedirectError)(e) || (0,next_dist_client_components_not_found_js__WEBPACK_IMPORTED_MODULE_0__.isNotFoundError)(e)) {\n          throw e;\n        }\n        if (!isError(e)) {\n          console.warn(\"Could not handle server error. Not an instance of Error: \", e);\n          return { serverError: DEFAULT_SERVER_ERROR };\n        }\n        await Promise.resolve(handleServerErrorLog(e));\n        return {\n          serverError: await Promise.resolve(handleReturnedServerError(e))\n        };\n      }\n    };\n  };\n  return actionBuilder;\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhZmUtYWN0aW9uL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDd0M7QUFDbUM7QUFDRDs7QUFFMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxzREFBSTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsUUFBUTtBQUNSLFlBQVksd0ZBQWUsT0FBTyx5RkFBZTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aW1lbG9nZ2VyLy4vbm9kZV9tb2R1bGVzL25leHQtc2FmZS1hY3Rpb24vZGlzdC9pbmRleC5tanM/NDYyZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvaW5kZXgudHNcbmltcG9ydCB7IHdyYXAgfSBmcm9tIFwiQGRlY3MvdHlwZXNjaGVtYVwiO1xuaW1wb3J0IHsgaXNOb3RGb3VuZEVycm9yIH0gZnJvbSBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQuanNcIjtcbmltcG9ydCB7IGlzUmVkaXJlY3RFcnJvciB9IGZyb20gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVkaXJlY3QuanNcIjtcblxuLy8gc3JjL3V0aWxzLnRzXG52YXIgaXNFcnJvciA9IChlcnJvcikgPT4gZXJyb3IgaW5zdGFuY2VvZiBFcnJvcjtcbnZhciBidWlsZFZhbGlkYXRpb25FcnJvcnMgPSAoaXNzdWVzKSA9PiB7XG4gIGNvbnN0IHZhbGlkYXRpb25FcnJvcnMgPSB7fTtcbiAgY29uc3QgYXBwZW5kSXNzdWUgPSAocGF0aCwgbWVzc2FnZSkgPT4ge1xuICAgIGlmICh2YWxpZGF0aW9uRXJyb3JzW3BhdGhdPy5sZW5ndGgpIHtcbiAgICAgIHZhbGlkYXRpb25FcnJvcnNbcGF0aF0ucHVzaChtZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsaWRhdGlvbkVycm9yc1twYXRoXSA9IFttZXNzYWdlXTtcbiAgICB9XG4gIH07XG4gIGZvciAoY29uc3QgaXNzdWUgb2YgaXNzdWVzKSB7XG4gICAgY29uc3QgcGF0aHMgPSBpc3N1ZS5wYXRoO1xuICAgIGlmIChwYXRocz8ubGVuZ3RoKSB7XG4gICAgICBmb3IgKGNvbnN0IHBhdGggb2YgcGF0aHMpIHtcbiAgICAgICAgYXBwZW5kSXNzdWUocGF0aCwgaXNzdWUubWVzc2FnZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwcGVuZElzc3VlKFwiX3Jvb3RcIiwgaXNzdWUubWVzc2FnZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiB2YWxpZGF0aW9uRXJyb3JzO1xufTtcblxuLy8gc3JjL2luZGV4LnRzXG52YXIgREVGQVVMVF9TRVJWRVJfRVJST1IgPSBcIlNvbWV0aGluZyB3ZW50IHdyb25nIHdoaWxlIGV4ZWN1dGluZyB0aGUgb3BlcmF0aW9uXCI7XG52YXIgY3JlYXRlU2FmZUFjdGlvbkNsaWVudCA9IChjcmVhdGVPcHRzKSA9PiB7XG4gIGNvbnN0IGhhbmRsZVNlcnZlckVycm9yTG9nID0gY3JlYXRlT3B0cz8uaGFuZGxlU2VydmVyRXJyb3JMb2cgfHwgKChlKSA9PiB7XG4gICAgY29uc29sZS5lcnJvcihcIkFjdGlvbiBlcnJvcjpcIiwgZS5tZXNzYWdlKTtcbiAgfSk7XG4gIGNvbnN0IGhhbmRsZVJldHVybmVkU2VydmVyRXJyb3IgPSAoZSkgPT4gY3JlYXRlT3B0cz8uaGFuZGxlUmV0dXJuZWRTZXJ2ZXJFcnJvcj8uKGUpIHx8IERFRkFVTFRfU0VSVkVSX0VSUk9SO1xuICBjb25zdCBhY3Rpb25CdWlsZGVyID0gKHNjaGVtYSwgc2VydmVyQ29kZSwgdXRpbHMpID0+IHtcbiAgICByZXR1cm4gYXN5bmMgKGNsaWVudElucHV0KSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBwYXJzZWRJbnB1dCA9IGF3YWl0IHdyYXAoc2NoZW1hKS52YWxpZGF0ZShjbGllbnRJbnB1dCk7XG4gICAgICAgIGlmIChcImlzc3Vlc1wiIGluIHBhcnNlZElucHV0KSB7XG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbGlkYXRpb25FcnJvcnM6IGJ1aWxkVmFsaWRhdGlvbkVycm9ycyhwYXJzZWRJbnB1dC5pc3N1ZXMpXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjdHggPSBhd2FpdCBQcm9taXNlLnJlc29sdmUoXG4gICAgICAgICAgY3JlYXRlT3B0cz8ubWlkZGxld2FyZT8uKHBhcnNlZElucHV0LmRhdGEsIHV0aWxzPy5taWRkbGV3YXJlRGF0YSlcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHNlcnZlckNvZGUocGFyc2VkSW5wdXQuZGF0YSwgY3R4KSA/PyBudWxsO1xuICAgICAgICByZXR1cm4geyBkYXRhIH07XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChpc1JlZGlyZWN0RXJyb3IoZSkgfHwgaXNOb3RGb3VuZEVycm9yKGUpKSB7XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlzRXJyb3IoZSkpIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oXCJDb3VsZCBub3QgaGFuZGxlIHNlcnZlciBlcnJvci4gTm90IGFuIGluc3RhbmNlIG9mIEVycm9yOiBcIiwgZSk7XG4gICAgICAgICAgcmV0dXJuIHsgc2VydmVyRXJyb3I6IERFRkFVTFRfU0VSVkVSX0VSUk9SIH07XG4gICAgICAgIH1cbiAgICAgICAgYXdhaXQgUHJvbWlzZS5yZXNvbHZlKGhhbmRsZVNlcnZlckVycm9yTG9nKGUpKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBzZXJ2ZXJFcnJvcjogYXdhaXQgUHJvbWlzZS5yZXNvbHZlKGhhbmRsZVJldHVybmVkU2VydmVyRXJyb3IoZSkpXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfTtcbiAgfTtcbiAgcmV0dXJuIGFjdGlvbkJ1aWxkZXI7XG59O1xuZXhwb3J0IHtcbiAgREVGQVVMVF9TRVJWRVJfRVJST1IsXG4gIGNyZWF0ZVNhZmVBY3Rpb25DbGllbnRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/next-safe-action/dist/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-safe-action/dist/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/next-safe-action/dist/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_SERVER_ERROR: () => (/* binding */ DEFAULT_SERVER_ERROR),\n/* harmony export */   createSafeActionClient: () => (/* binding */ createSafeActionClient)\n/* harmony export */ });\n/* harmony import */ var _decs_typeschema__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @decs/typeschema */ \"(rsc)/./node_modules/next-safe-action/node_modules/@decs/typeschema/dist/index.mjs\");\n/* harmony import */ var next_dist_client_components_not_found_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/client/components/not-found.js */ \"(rsc)/./node_modules/next/dist/client/components/not-found.js\");\n/* harmony import */ var next_dist_client_components_redirect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/client/components/redirect.js */ \"(rsc)/./node_modules/next/dist/client/components/redirect.js\");\n// src/index.ts\n\n\n\n\n// src/utils.ts\nvar isError = (error) => error instanceof Error;\nvar buildValidationErrors = (issues) => {\n  const validationErrors = {};\n  const appendIssue = (path, message) => {\n    if (validationErrors[path]?.length) {\n      validationErrors[path].push(message);\n    } else {\n      validationErrors[path] = [message];\n    }\n  };\n  for (const issue of issues) {\n    const paths = issue.path;\n    if (paths?.length) {\n      for (const path of paths) {\n        appendIssue(path, issue.message);\n      }\n    } else {\n      appendIssue(\"_root\", issue.message);\n    }\n  }\n  return validationErrors;\n};\n\n// src/index.ts\nvar DEFAULT_SERVER_ERROR = \"Something went wrong while executing the operation\";\nvar createSafeActionClient = (createOpts) => {\n  const handleServerErrorLog = createOpts?.handleServerErrorLog || ((e) => {\n    console.error(\"Action error:\", e.message);\n  });\n  const handleReturnedServerError = (e) => createOpts?.handleReturnedServerError?.(e) || DEFAULT_SERVER_ERROR;\n  const actionBuilder = (schema, serverCode, utils) => {\n    return async (clientInput) => {\n      try {\n        const parsedInput = await (0,_decs_typeschema__WEBPACK_IMPORTED_MODULE_2__.wrap)(schema).validate(clientInput);\n        if (\"issues\" in parsedInput) {\n          return {\n            validationErrors: buildValidationErrors(parsedInput.issues)\n          };\n        }\n        const ctx = await Promise.resolve(\n          createOpts?.middleware?.(parsedInput.data, utils?.middlewareData)\n        );\n        const data = await serverCode(parsedInput.data, ctx) ?? null;\n        return { data };\n      } catch (e) {\n        if ((0,next_dist_client_components_redirect_js__WEBPACK_IMPORTED_MODULE_1__.isRedirectError)(e) || (0,next_dist_client_components_not_found_js__WEBPACK_IMPORTED_MODULE_0__.isNotFoundError)(e)) {\n          throw e;\n        }\n        if (!isError(e)) {\n          console.warn(\"Could not handle server error. Not an instance of Error: \", e);\n          return { serverError: DEFAULT_SERVER_ERROR };\n        }\n        await Promise.resolve(handleServerErrorLog(e));\n        return {\n          serverError: await Promise.resolve(handleReturnedServerError(e))\n        };\n      }\n    };\n  };\n  return actionBuilder;\n};\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1zYWZlLWFjdGlvbi9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ3dDO0FBQ21DO0FBQ0Q7O0FBRTFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msc0RBQUk7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLFFBQVE7QUFDUixZQUFZLHdGQUFlLE9BQU8seUZBQWU7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGltZWxvZ2dlci8uL25vZGVfbW9kdWxlcy9uZXh0LXNhZmUtYWN0aW9uL2Rpc3QvaW5kZXgubWpzPzcwY2UiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2luZGV4LnRzXG5pbXBvcnQgeyB3cmFwIH0gZnJvbSBcIkBkZWNzL3R5cGVzY2hlbWFcIjtcbmltcG9ydCB7IGlzTm90Rm91bmRFcnJvciB9IGZyb20gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLmpzXCI7XG5pbXBvcnQgeyBpc1JlZGlyZWN0RXJyb3IgfSBmcm9tIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlZGlyZWN0LmpzXCI7XG5cbi8vIHNyYy91dGlscy50c1xudmFyIGlzRXJyb3IgPSAoZXJyb3IpID0+IGVycm9yIGluc3RhbmNlb2YgRXJyb3I7XG52YXIgYnVpbGRWYWxpZGF0aW9uRXJyb3JzID0gKGlzc3VlcykgPT4ge1xuICBjb25zdCB2YWxpZGF0aW9uRXJyb3JzID0ge307XG4gIGNvbnN0IGFwcGVuZElzc3VlID0gKHBhdGgsIG1lc3NhZ2UpID0+IHtcbiAgICBpZiAodmFsaWRhdGlvbkVycm9yc1twYXRoXT8ubGVuZ3RoKSB7XG4gICAgICB2YWxpZGF0aW9uRXJyb3JzW3BhdGhdLnB1c2gobWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbGlkYXRpb25FcnJvcnNbcGF0aF0gPSBbbWVzc2FnZV07XG4gICAgfVxuICB9O1xuICBmb3IgKGNvbnN0IGlzc3VlIG9mIGlzc3Vlcykge1xuICAgIGNvbnN0IHBhdGhzID0gaXNzdWUucGF0aDtcbiAgICBpZiAocGF0aHM/Lmxlbmd0aCkge1xuICAgICAgZm9yIChjb25zdCBwYXRoIG9mIHBhdGhzKSB7XG4gICAgICAgIGFwcGVuZElzc3VlKHBhdGgsIGlzc3VlLm1lc3NhZ2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBhcHBlbmRJc3N1ZShcIl9yb290XCIsIGlzc3VlLm1lc3NhZ2UpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdmFsaWRhdGlvbkVycm9ycztcbn07XG5cbi8vIHNyYy9pbmRleC50c1xudmFyIERFRkFVTFRfU0VSVkVSX0VSUk9SID0gXCJTb21ldGhpbmcgd2VudCB3cm9uZyB3aGlsZSBleGVjdXRpbmcgdGhlIG9wZXJhdGlvblwiO1xudmFyIGNyZWF0ZVNhZmVBY3Rpb25DbGllbnQgPSAoY3JlYXRlT3B0cykgPT4ge1xuICBjb25zdCBoYW5kbGVTZXJ2ZXJFcnJvckxvZyA9IGNyZWF0ZU9wdHM/LmhhbmRsZVNlcnZlckVycm9yTG9nIHx8ICgoZSkgPT4ge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJBY3Rpb24gZXJyb3I6XCIsIGUubWVzc2FnZSk7XG4gIH0pO1xuICBjb25zdCBoYW5kbGVSZXR1cm5lZFNlcnZlckVycm9yID0gKGUpID0+IGNyZWF0ZU9wdHM/LmhhbmRsZVJldHVybmVkU2VydmVyRXJyb3I/LihlKSB8fCBERUZBVUxUX1NFUlZFUl9FUlJPUjtcbiAgY29uc3QgYWN0aW9uQnVpbGRlciA9IChzY2hlbWEsIHNlcnZlckNvZGUsIHV0aWxzKSA9PiB7XG4gICAgcmV0dXJuIGFzeW5jIChjbGllbnRJbnB1dCkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcGFyc2VkSW5wdXQgPSBhd2FpdCB3cmFwKHNjaGVtYSkudmFsaWRhdGUoY2xpZW50SW5wdXQpO1xuICAgICAgICBpZiAoXCJpc3N1ZXNcIiBpbiBwYXJzZWRJbnB1dCkge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWxpZGF0aW9uRXJyb3JzOiBidWlsZFZhbGlkYXRpb25FcnJvcnMocGFyc2VkSW5wdXQuaXNzdWVzKVxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY3R4ID0gYXdhaXQgUHJvbWlzZS5yZXNvbHZlKFxuICAgICAgICAgIGNyZWF0ZU9wdHM/Lm1pZGRsZXdhcmU/LihwYXJzZWRJbnB1dC5kYXRhLCB1dGlscz8ubWlkZGxld2FyZURhdGEpXG4gICAgICAgICk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBzZXJ2ZXJDb2RlKHBhcnNlZElucHV0LmRhdGEsIGN0eCkgPz8gbnVsbDtcbiAgICAgICAgcmV0dXJuIHsgZGF0YSB9O1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoaXNSZWRpcmVjdEVycm9yKGUpIHx8IGlzTm90Rm91bmRFcnJvcihlKSkge1xuICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc0Vycm9yKGUpKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKFwiQ291bGQgbm90IGhhbmRsZSBzZXJ2ZXIgZXJyb3IuIE5vdCBhbiBpbnN0YW5jZSBvZiBFcnJvcjogXCIsIGUpO1xuICAgICAgICAgIHJldHVybiB7IHNlcnZlckVycm9yOiBERUZBVUxUX1NFUlZFUl9FUlJPUiB9O1xuICAgICAgICB9XG4gICAgICAgIGF3YWl0IFByb21pc2UucmVzb2x2ZShoYW5kbGVTZXJ2ZXJFcnJvckxvZyhlKSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgc2VydmVyRXJyb3I6IGF3YWl0IFByb21pc2UucmVzb2x2ZShoYW5kbGVSZXR1cm5lZFNlcnZlckVycm9yKGUpKVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH07XG4gIH07XG4gIHJldHVybiBhY3Rpb25CdWlsZGVyO1xufTtcbmV4cG9ydCB7XG4gIERFRkFVTFRfU0VSVkVSX0VSUk9SLFxuICBjcmVhdGVTYWZlQWN0aW9uQ2xpZW50XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-safe-action/dist/index.mjs\n");

/***/ }),

/***/ "(action-browser)/./node_modules/next-safe-action/node_modules/@decs/typeschema/dist/index.mjs":
/*!************************************************************************************!*\
  !*** ./node_modules/next-safe-action/node_modules/@decs/typeschema/dist/index.mjs ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assert: () => (/* binding */ assert),\n/* harmony export */   validate: () => (/* binding */ validate),\n/* harmony export */   wrap: () => (/* binding */ wrap2)\n/* harmony export */ });\n// src/adapters/index.ts\nfunction wrap(adapters) {\n  return async (schema) => {\n    const results = await Promise.all(\n      adapters.map((adapter) => adapter(schema)).filter(Boolean)\n    );\n    if (results.length === 0) {\n      throw new Error(\"Missing adapters for schema: \" + schema);\n    }\n    if (results.length > 1) {\n      throw new Error(\"Conflicting adapters for schema: \" + schema);\n    }\n    return results[0];\n  };\n}\n\n// src/utils.ts\nfunction memoize(fn) {\n  let cache = void 0;\n  const memoizedFn = async () => {\n    if (cache === void 0) {\n      cache = await fn();\n    }\n    return cache;\n  };\n  memoizedFn.clear = () => cache = void 0;\n  return memoizedFn;\n}\nfunction isTypeBoxSchema(schema) {\n  return Symbol.for(\"TypeBox.Kind\") in schema;\n}\nfunction isJSONSchema(schema) {\n  return typeof schema === \"object\" && !(\"validate\" in schema) && !(\"kind\" in schema) && !(\"parse\" in schema) && !(\"_parse\" in schema) && !(\"ast\" in schema) && !isTypeBoxSchema(schema);\n}\n\n// src/adapters/ajv.ts\nvar fetchModule = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { default: Ajv } = await import(\n      /* webpackIgnore: true */\n      \"ajv\"\n    );\n    return new Ajv();\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate = /* @__PURE__ */ coerce(async (schema) => {\n  const ajv = await fetchModule();\n  const validateSchema = ajv.compile(schema);\n  return async (data) => {\n    if (validateSchema(data)) {\n      return {\n        data,\n        success: true\n      };\n    }\n    return {\n      issues: (validateSchema.errors ?? []).map(({ message, schemaPath }) => ({\n        message: message ?? \"\",\n        path: [schemaPath]\n      })),\n      success: false\n    };\n  };\n});\n\n// src/adapters/arktype.ts\nvar coerce2 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"infer\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate2 = /* @__PURE__ */ coerce2(\n  async (schema) => async (data) => {\n    const result = schema(data);\n    if (result.problems == null) {\n      return {\n        data: result.data,\n        success: true\n      };\n    }\n    return {\n      issues: Array.from(result.problems).map(({ message, path }) => ({\n        message,\n        path\n      })),\n      success: false\n    };\n  }\n);\n\n// src/adapters/custom.ts\nvar coerce3 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => typeof schema === \"function\" && !(\"assert\" in schema) ? fn(schema) : void 0;\nvar createValidate3 = /* @__PURE__ */ coerce3(\n  async (schema) => async (data) => {\n    try {\n      return {\n        data: await schema(data),\n        success: true\n      };\n    } catch (error) {\n      if (error instanceof Error) {\n        return {\n          issues: [{ message: error.message }],\n          success: false\n        };\n      }\n      throw error;\n    }\n  }\n);\n\n// src/adapters/deepkit.ts\nvar fetchModule2 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { validate: validate2 } = await import(\n      /* webpackIgnore: true */\n      \"@deepkit/type\"\n    );\n    return { validate: validate2 };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce4 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"kind\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate4 = /* @__PURE__ */ coerce4(async (schema) => {\n  const { validate: validate2 } = await fetchModule2();\n  return async (data) => {\n    const result = validate2(data, schema);\n    if (result.length === 0) {\n      return {\n        data,\n        success: true\n      };\n    }\n    return {\n      issues: result.map(({ message, path }) => ({ message, path: [path] })),\n      success: false\n    };\n  };\n});\n\n// src/adapters/effect.ts\nvar fetchModule3 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { isRight } = await import(\n      /* webpackIgnore: true */\n      \"effect/Either\"\n    );\n    const { isSchema, parseEither } = await import(\n      /* webpackIgnore: true */\n      \"@effect/schema/Schema\"\n    );\n    const { formatError } = await import(\n      /* webpackIgnore: true */\n      \"@effect/schema/TreeFormatter\"\n    );\n    return { formatError, isRight, isSchema, parseEither };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce5 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => {\n  return \"ast\" in schema && !isJSONSchema(schema) && !isTypeBoxSchema(schema) ? fn(schema) : void 0;\n};\nvar createValidate5 = /* @__PURE__ */ coerce5(async (schema) => {\n  const { parseEither, isRight, formatError } = await fetchModule3();\n  const parseSchema = parseEither(schema);\n  return async (data) => {\n    const result = parseSchema(data);\n    if (isRight(result)) {\n      return {\n        data: result.right,\n        success: true\n      };\n    }\n    return {\n      issues: [{ message: formatError(result.left) }],\n      success: false\n    };\n  };\n});\n\n// src/adapters/io-ts.ts\nvar fetchModule4 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { isRight } = await import(\n      /* webpackIgnore: true */\n      \"fp-ts/Either\"\n    );\n    return { isRight };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce6 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"encode\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate6 = /* @__PURE__ */ coerce6(async (schema) => {\n  const { isRight } = await fetchModule4();\n  return async (data) => {\n    const result = schema.decode(data);\n    if (isRight(result)) {\n      return {\n        data: result.right,\n        success: true\n      };\n    }\n    return {\n      issues: result.left.map(({ message, context }) => ({\n        message: message ?? \"\",\n        path: context.map(({ key }) => key)\n      })),\n      success: false\n    };\n  };\n});\n\n// src/adapters/joi.ts\nvar coerce7 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"_flags\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate7 = /* @__PURE__ */ coerce7(\n  async (schema) => async (data) => {\n    const result = schema.validate(data);\n    if (result.error == null) {\n      return {\n        data: result.value,\n        success: true\n      };\n    }\n    return {\n      issues: result.error.details.map(({ message, path }) => ({\n        message,\n        path\n      })),\n      success: false\n    };\n  }\n);\n\n// src/adapters/ow.ts\nvar fetchModule5 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { default: ow, ArgumentError } = await import(\n      /* webpackIgnore: true */\n      \"ow\"\n    );\n    return { ArgumentError, ow };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce8 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"context\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate8 = /* @__PURE__ */ coerce8(async (schema) => {\n  const { ow, ArgumentError } = await fetchModule5();\n  const assertSchema = ow.create(schema);\n  return async (data) => {\n    try {\n      assertSchema(data);\n      return {\n        data,\n        success: true\n      };\n    } catch (error) {\n      if (error instanceof ArgumentError) {\n        return {\n          issues: Array.from(error.validationErrors.values()).flatMap(\n            (messages) => Array.from(messages).map((message) => ({ message }))\n          ),\n          success: false\n        };\n      }\n      throw error;\n    }\n  };\n});\n\n// src/adapters/runtypes.ts\nvar coerce9 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"reflect\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate9 = /* @__PURE__ */ coerce9(\n  async (schema) => async (data) => {\n    const result = schema.validate(data);\n    if (result.success) {\n      return {\n        data: result.value,\n        success: true\n      };\n    }\n    return {\n      issues: [{ message: result.message }],\n      success: false\n    };\n  }\n);\n\n// src/adapters/superstruct.ts\nvar coerce10 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"refiner\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate10 = /* @__PURE__ */ coerce10(\n  async (schema) => async (data) => {\n    const result = schema.validate(data, { coerce: true });\n    if (result[0] == null) {\n      return {\n        data: result[1],\n        success: true\n      };\n    }\n    const { message, path } = result[0];\n    return {\n      issues: [{ message, path }],\n      success: false\n    };\n  }\n);\n\n// src/adapters/typebox.ts\nvar fetchModule6 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { TypeCompiler } = await import(\n      /* webpackIgnore: true */\n      \"@sinclair/typebox/compiler\"\n    );\n    return { TypeCompiler };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce11 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => isTypeBoxSchema(schema) ? fn(schema) : void 0;\nvar createValidate11 = /* @__PURE__ */ coerce11(async (schema) => {\n  const { TypeCompiler } = await fetchModule6();\n  const result = TypeCompiler.Compile(schema);\n  return async (data) => {\n    if (result.Check(data)) {\n      return {\n        data,\n        success: true\n      };\n    }\n    return {\n      issues: [...result.Errors(data)].map(({ message, path }) => ({\n        message,\n        path: [path]\n      })),\n      success: false\n    };\n  };\n});\n\n// src/adapters/valibot.ts\nvar fetchModule7 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { safeParseAsync } = await import(\n      /* webpackIgnore: true */\n      \"valibot\"\n    );\n    return { safeParseAsync };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce12 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"async\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate12 = /* @__PURE__ */ coerce12(async (schema) => {\n  const { safeParseAsync } = await fetchModule7();\n  return async (data) => {\n    const result = await safeParseAsync(schema, data);\n    if (result.success) {\n      return {\n        data: result.output,\n        success: true\n      };\n    }\n    return {\n      issues: result.issues.map(({ message, path }) => ({\n        message,\n        path: path?.map(\n          ({ type, key }) => type === \"map\" || type === \"unknown\" ? String(key) : key\n        )\n      })),\n      success: false\n    };\n  };\n});\n\n// src/adapters/yup.ts\nvar fetchModule8 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { ValidationError } = await import(\n      /* webpackIgnore: true */\n      \"yup\"\n    );\n    return { ValidationError };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce13 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"__isYupSchema__\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate13 = /* @__PURE__ */ coerce13(async (schema) => {\n  const { ValidationError } = await fetchModule8();\n  return async (data) => {\n    try {\n      return {\n        data: await schema.validate(data, { strict: true }),\n        success: true\n      };\n    } catch (error) {\n      if (error instanceof ValidationError) {\n        const { message, path } = error;\n        return {\n          issues: [\n            {\n              message,\n              path: path != null && path !== \"\" ? [path] : void 0\n            }\n          ],\n          success: false\n        };\n      }\n      throw error;\n    }\n  };\n});\n\n// src/adapters/zod.ts\nvar coerce14 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"_def\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate14 = /* @__PURE__ */ coerce14(\n  async (schema) => async (data) => {\n    const result = await schema.safeParseAsync(data);\n    if (result.success) {\n      return {\n        data: result.data,\n        success: true\n      };\n    }\n    return {\n      issues: result.error.issues.map(({ message, path }) => ({ message, path })),\n      success: false\n    };\n  }\n);\n\n// src/registry.ts\nvar createValidate15 = /* @__PURE__ */ wrap([\n  createValidate,\n  createValidate2,\n  createValidate3,\n  createValidate4,\n  createValidate5,\n  createValidate6,\n  createValidate7,\n  createValidate8,\n  createValidate9,\n  createValidate10,\n  createValidate11,\n  createValidate12,\n  createValidate13,\n  createValidate14\n]);\n\n// src/validation.ts\nasync function validate(schema, data) {\n  const validateSchema = await createValidate15(schema);\n  return validateSchema(data);\n}\nasync function assert(schema, data) {\n  const result = await validate(schema, data);\n  if (result.success) {\n    return result.data;\n  }\n  throw new AggregateError(result.issues, \"Assertion failed\");\n}\n\n// src/wrap.ts\nfunction wrap2(schema) {\n  return {\n    _input: void 0,\n    _output: void 0,\n    assert: (data) => assert(schema, data),\n    parse: (data) => assert(schema, data),\n    validate: (data) => validate(schema, data)\n  };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/next-safe-action/node_modules/@decs/typeschema/dist/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-safe-action/node_modules/@decs/typeschema/dist/index.mjs":
/*!************************************************************************************!*\
  !*** ./node_modules/next-safe-action/node_modules/@decs/typeschema/dist/index.mjs ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assert: () => (/* binding */ assert),\n/* harmony export */   validate: () => (/* binding */ validate),\n/* harmony export */   wrap: () => (/* binding */ wrap2)\n/* harmony export */ });\n// src/adapters/index.ts\nfunction wrap(adapters) {\n  return async (schema) => {\n    const results = await Promise.all(\n      adapters.map((adapter) => adapter(schema)).filter(Boolean)\n    );\n    if (results.length === 0) {\n      throw new Error(\"Missing adapters for schema: \" + schema);\n    }\n    if (results.length > 1) {\n      throw new Error(\"Conflicting adapters for schema: \" + schema);\n    }\n    return results[0];\n  };\n}\n\n// src/utils.ts\nfunction memoize(fn) {\n  let cache = void 0;\n  const memoizedFn = async () => {\n    if (cache === void 0) {\n      cache = await fn();\n    }\n    return cache;\n  };\n  memoizedFn.clear = () => cache = void 0;\n  return memoizedFn;\n}\nfunction isTypeBoxSchema(schema) {\n  return Symbol.for(\"TypeBox.Kind\") in schema;\n}\nfunction isJSONSchema(schema) {\n  return typeof schema === \"object\" && !(\"validate\" in schema) && !(\"kind\" in schema) && !(\"parse\" in schema) && !(\"_parse\" in schema) && !(\"ast\" in schema) && !isTypeBoxSchema(schema);\n}\n\n// src/adapters/ajv.ts\nvar fetchModule = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { default: Ajv } = await import(\n      /* webpackIgnore: true */\n      \"ajv\"\n    );\n    return new Ajv();\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate = /* @__PURE__ */ coerce(async (schema) => {\n  const ajv = await fetchModule();\n  const validateSchema = ajv.compile(schema);\n  return async (data) => {\n    if (validateSchema(data)) {\n      return {\n        data,\n        success: true\n      };\n    }\n    return {\n      issues: (validateSchema.errors ?? []).map(({ message, schemaPath }) => ({\n        message: message ?? \"\",\n        path: [schemaPath]\n      })),\n      success: false\n    };\n  };\n});\n\n// src/adapters/arktype.ts\nvar coerce2 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"infer\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate2 = /* @__PURE__ */ coerce2(\n  async (schema) => async (data) => {\n    const result = schema(data);\n    if (result.problems == null) {\n      return {\n        data: result.data,\n        success: true\n      };\n    }\n    return {\n      issues: Array.from(result.problems).map(({ message, path }) => ({\n        message,\n        path\n      })),\n      success: false\n    };\n  }\n);\n\n// src/adapters/custom.ts\nvar coerce3 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => typeof schema === \"function\" && !(\"assert\" in schema) ? fn(schema) : void 0;\nvar createValidate3 = /* @__PURE__ */ coerce3(\n  async (schema) => async (data) => {\n    try {\n      return {\n        data: await schema(data),\n        success: true\n      };\n    } catch (error) {\n      if (error instanceof Error) {\n        return {\n          issues: [{ message: error.message }],\n          success: false\n        };\n      }\n      throw error;\n    }\n  }\n);\n\n// src/adapters/deepkit.ts\nvar fetchModule2 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { validate: validate2 } = await import(\n      /* webpackIgnore: true */\n      \"@deepkit/type\"\n    );\n    return { validate: validate2 };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce4 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"kind\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate4 = /* @__PURE__ */ coerce4(async (schema) => {\n  const { validate: validate2 } = await fetchModule2();\n  return async (data) => {\n    const result = validate2(data, schema);\n    if (result.length === 0) {\n      return {\n        data,\n        success: true\n      };\n    }\n    return {\n      issues: result.map(({ message, path }) => ({ message, path: [path] })),\n      success: false\n    };\n  };\n});\n\n// src/adapters/effect.ts\nvar fetchModule3 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { isRight } = await import(\n      /* webpackIgnore: true */\n      \"effect/Either\"\n    );\n    const { isSchema, parseEither } = await import(\n      /* webpackIgnore: true */\n      \"@effect/schema/Schema\"\n    );\n    const { formatError } = await import(\n      /* webpackIgnore: true */\n      \"@effect/schema/TreeFormatter\"\n    );\n    return { formatError, isRight, isSchema, parseEither };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce5 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => {\n  return \"ast\" in schema && !isJSONSchema(schema) && !isTypeBoxSchema(schema) ? fn(schema) : void 0;\n};\nvar createValidate5 = /* @__PURE__ */ coerce5(async (schema) => {\n  const { parseEither, isRight, formatError } = await fetchModule3();\n  const parseSchema = parseEither(schema);\n  return async (data) => {\n    const result = parseSchema(data);\n    if (isRight(result)) {\n      return {\n        data: result.right,\n        success: true\n      };\n    }\n    return {\n      issues: [{ message: formatError(result.left) }],\n      success: false\n    };\n  };\n});\n\n// src/adapters/io-ts.ts\nvar fetchModule4 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { isRight } = await import(\n      /* webpackIgnore: true */\n      \"fp-ts/Either\"\n    );\n    return { isRight };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce6 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"encode\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate6 = /* @__PURE__ */ coerce6(async (schema) => {\n  const { isRight } = await fetchModule4();\n  return async (data) => {\n    const result = schema.decode(data);\n    if (isRight(result)) {\n      return {\n        data: result.right,\n        success: true\n      };\n    }\n    return {\n      issues: result.left.map(({ message, context }) => ({\n        message: message ?? \"\",\n        path: context.map(({ key }) => key)\n      })),\n      success: false\n    };\n  };\n});\n\n// src/adapters/joi.ts\nvar coerce7 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"_flags\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate7 = /* @__PURE__ */ coerce7(\n  async (schema) => async (data) => {\n    const result = schema.validate(data);\n    if (result.error == null) {\n      return {\n        data: result.value,\n        success: true\n      };\n    }\n    return {\n      issues: result.error.details.map(({ message, path }) => ({\n        message,\n        path\n      })),\n      success: false\n    };\n  }\n);\n\n// src/adapters/ow.ts\nvar fetchModule5 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { default: ow, ArgumentError } = await import(\n      /* webpackIgnore: true */\n      \"ow\"\n    );\n    return { ArgumentError, ow };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce8 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"context\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate8 = /* @__PURE__ */ coerce8(async (schema) => {\n  const { ow, ArgumentError } = await fetchModule5();\n  const assertSchema = ow.create(schema);\n  return async (data) => {\n    try {\n      assertSchema(data);\n      return {\n        data,\n        success: true\n      };\n    } catch (error) {\n      if (error instanceof ArgumentError) {\n        return {\n          issues: Array.from(error.validationErrors.values()).flatMap(\n            (messages) => Array.from(messages).map((message) => ({ message }))\n          ),\n          success: false\n        };\n      }\n      throw error;\n    }\n  };\n});\n\n// src/adapters/runtypes.ts\nvar coerce9 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"reflect\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate9 = /* @__PURE__ */ coerce9(\n  async (schema) => async (data) => {\n    const result = schema.validate(data);\n    if (result.success) {\n      return {\n        data: result.value,\n        success: true\n      };\n    }\n    return {\n      issues: [{ message: result.message }],\n      success: false\n    };\n  }\n);\n\n// src/adapters/superstruct.ts\nvar coerce10 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"refiner\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate10 = /* @__PURE__ */ coerce10(\n  async (schema) => async (data) => {\n    const result = schema.validate(data, { coerce: true });\n    if (result[0] == null) {\n      return {\n        data: result[1],\n        success: true\n      };\n    }\n    const { message, path } = result[0];\n    return {\n      issues: [{ message, path }],\n      success: false\n    };\n  }\n);\n\n// src/adapters/typebox.ts\nvar fetchModule6 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { TypeCompiler } = await import(\n      /* webpackIgnore: true */\n      \"@sinclair/typebox/compiler\"\n    );\n    return { TypeCompiler };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce11 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => isTypeBoxSchema(schema) ? fn(schema) : void 0;\nvar createValidate11 = /* @__PURE__ */ coerce11(async (schema) => {\n  const { TypeCompiler } = await fetchModule6();\n  const result = TypeCompiler.Compile(schema);\n  return async (data) => {\n    if (result.Check(data)) {\n      return {\n        data,\n        success: true\n      };\n    }\n    return {\n      issues: [...result.Errors(data)].map(({ message, path }) => ({\n        message,\n        path: [path]\n      })),\n      success: false\n    };\n  };\n});\n\n// src/adapters/valibot.ts\nvar fetchModule7 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { safeParseAsync } = await import(\n      /* webpackIgnore: true */\n      \"valibot\"\n    );\n    return { safeParseAsync };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce12 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"async\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate12 = /* @__PURE__ */ coerce12(async (schema) => {\n  const { safeParseAsync } = await fetchModule7();\n  return async (data) => {\n    const result = await safeParseAsync(schema, data);\n    if (result.success) {\n      return {\n        data: result.output,\n        success: true\n      };\n    }\n    return {\n      issues: result.issues.map(({ message, path }) => ({\n        message,\n        path: path?.map(\n          ({ type, key }) => type === \"map\" || type === \"unknown\" ? String(key) : key\n        )\n      })),\n      success: false\n    };\n  };\n});\n\n// src/adapters/yup.ts\nvar fetchModule8 = /* @__PURE__ */ memoize(async () => {\n  try {\n    const { ValidationError } = await import(\n      /* webpackIgnore: true */\n      \"yup\"\n    );\n    return { ValidationError };\n  } catch (error) {\n    throw error;\n  }\n});\nvar coerce13 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"__isYupSchema__\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate13 = /* @__PURE__ */ coerce13(async (schema) => {\n  const { ValidationError } = await fetchModule8();\n  return async (data) => {\n    try {\n      return {\n        data: await schema.validate(data, { strict: true }),\n        success: true\n      };\n    } catch (error) {\n      if (error instanceof ValidationError) {\n        const { message, path } = error;\n        return {\n          issues: [\n            {\n              message,\n              path: path != null && path !== \"\" ? [path] : void 0\n            }\n          ],\n          success: false\n        };\n      }\n      throw error;\n    }\n  };\n});\n\n// src/adapters/zod.ts\nvar coerce14 = /* @__NO_SIDE_EFFECTS__ */ (fn) => (schema) => \"_def\" in schema && !isTypeBoxSchema(schema) && !isJSONSchema(schema) ? fn(schema) : void 0;\nvar createValidate14 = /* @__PURE__ */ coerce14(\n  async (schema) => async (data) => {\n    const result = await schema.safeParseAsync(data);\n    if (result.success) {\n      return {\n        data: result.data,\n        success: true\n      };\n    }\n    return {\n      issues: result.error.issues.map(({ message, path }) => ({ message, path })),\n      success: false\n    };\n  }\n);\n\n// src/registry.ts\nvar createValidate15 = /* @__PURE__ */ wrap([\n  createValidate,\n  createValidate2,\n  createValidate3,\n  createValidate4,\n  createValidate5,\n  createValidate6,\n  createValidate7,\n  createValidate8,\n  createValidate9,\n  createValidate10,\n  createValidate11,\n  createValidate12,\n  createValidate13,\n  createValidate14\n]);\n\n// src/validation.ts\nasync function validate(schema, data) {\n  const validateSchema = await createValidate15(schema);\n  return validateSchema(data);\n}\nasync function assert(schema, data) {\n  const result = await validate(schema, data);\n  if (result.success) {\n    return result.data;\n  }\n  throw new AggregateError(result.issues, \"Assertion failed\");\n}\n\n// src/wrap.ts\nfunction wrap2(schema) {\n  return {\n    _input: void 0,\n    _output: void 0,\n    assert: (data) => assert(schema, data),\n    parse: (data) => assert(schema, data),\n    validate: (data) => validate(schema, data)\n  };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-safe-action/node_modules/@decs/typeschema/dist/index.mjs\n");

/***/ })

};
;